{"version":3,"sources":["objectIterator.js"],"names":["oblec","_defineProperty","name","Symbol","iterator","counter","Object","keys","this","log","values","next","length","value","concat","vals","undefined","done","_step","_iterator","_iteratorNormalCompletion","ele","console"],"mappings":"mJAyBA,IAAAA,MAAAC,gBAAA,CAEID,KAAK,MACLE,IAAM,IAGKC,OAACC,SANhB,WAOgBC,IAAUA,GAAd,EACWC,EAAOC,OAAlBA,KAAAC,MACQC,QAARA,IAAAF,GACQ,IAAGD,EAAOI,OAAOA,OAAzBF,MACO,MAAA,CAAAG,KAAA,WAGC,QADON,EACOE,EAAKK,OAAnB,CACWC,MAAA,GAAAC,OAAAP,EAAAF,GAAA,KAAAS,OAAAC,EAAAV,GAAA,KACOE,MAAKF,GAGhB,CACIQ,WAAAG,EAAAC,MAAA,mFAW/B,IAAA,IAAAC,MAAAC,UAAkBnB,MAAlBG,OAAAC,cAAAgB,2BAAAF,MAAAC,UAAAR,QAAAM,MAAAG,2BAAA,EAAyB,CAAA,IAAdC,IAAcH,MAAAL,MACrBS,QAAQb,IAAIY","file":"objectIterator.min.js","sourcesContent":["// // let arr = [2, 6, 84, 27, 45];\r\n\r\n// function objectIter(obj) {\r\n//     obj[Symbol.iterator] = function () {\r\n//         let counter = -1;\r\n//         return {\r\n//             next() {\r\n//                 counter++;\r\n//                 if (counter < obj.length) {\r\n//                     return {\r\n//                         value: obj[counter],\r\n//                         done: false,\r\n//                     };\r\n//                 } else {\r\n//                     return {\r\n//                         value: undefined,\r\n//                         done: true,\r\n//                     };\r\n//                 }\r\n//             },\r\n//         };\r\n//     };\r\n// }\r\n\r\n// objectIter(arr);\r\n// // \r\n\r\nlet oblec = {\r\n    name: \"ads\",\r\n    age: 13,\r\n    \r\n        [Symbol.iterator]() {\r\n            let counter = -1;\r\n            let keys = Object.keys(this)\r\n            console.log(keys);\r\n            let vals = Object.values(this)\r\n            return {\r\n                next() {\r\n                    counter++;\r\n                    if (counter < keys.length) {\r\n                        return {\r\n                            value: `${keys[counter]} ${vals[counter]} `,\r\n                            done: false,\r\n                        };\r\n                    } else {\r\n                        return {\r\n                            value: undefined,\r\n                            done: true,\r\n                        };\r\n                    }\r\n                },\r\n            };\r\n        }\r\n    }\r\n\r\n\r\nfor (const ele of oblec) {\r\n    console.log(ele);\r\n}"]}